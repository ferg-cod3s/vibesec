{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "VibeSec Detection Rule",
  "description": "Schema for VibeSec security detection rules",
  "type": "object",
  "required": [
    "id",
    "name",
    "description",
    "severity",
    "category",
    "languages",
    "patterns",
    "confidence",
    "fix"
  ],
  "properties": {
    "id": {
      "type": "string",
      "pattern": "^[a-z0-9-]+$",
      "description": "Unique rule identifier (kebab-case)"
    },
    "name": {
      "type": "string",
      "minLength": 5,
      "description": "Human-readable rule name"
    },
    "description": {
      "type": "string",
      "minLength": 20,
      "description": "Detailed explanation of the security issue (supports markdown)"
    },
    "severity": {
      "type": "string",
      "enum": ["critical", "high", "medium", "low"],
      "description": "Severity level of the finding"
    },
    "category": {
      "type": "string",
      "enum": [
        "secrets",
        "injection",
        "auth",
        "ai-specific",
        "incomplete",
        "crypto",
        "config"
      ],
      "description": "Security category"
    },
    "languages": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "javascript",
          "typescript",
          "python",
          "go",
          "java",
          "ruby",
          "php",
          "csharp",
          "rust"
        ]
      },
      "minItems": 1,
      "description": "Programming languages this rule applies to"
    },
    "patterns": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "required": ["type", "pattern"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["regex", "ast"],
            "description": "Pattern matching type"
          },
          "pattern": {
            "type": "string",
            "description": "Regex pattern or AST query"
          }
        }
      },
      "description": "Detection patterns for this rule"
    },
    "confidence": {
      "type": "number",
      "minimum": 0,
      "maximum": 1,
      "description": "Confidence score for this detection (0.0-1.0)"
    },
    "fix": {
      "type": "object",
      "required": ["recommendation"],
      "properties": {
        "recommendation": {
          "type": "string",
          "minLength": 50,
          "description": "Detailed fix instructions (markdown supported)"
        },
        "references": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uri"
          },
          "description": "Links to documentation (OWASP, CWE, etc.)"
        }
      },
      "description": "Fix guidance for the security issue"
    },
    "metadata": {
      "type": "object",
      "properties": {
        "cwe": {
          "type": "string",
          "pattern": "^CWE-[0-9]+$",
          "description": "Common Weakness Enumeration ID"
        },
        "owasp": {
          "type": "string",
          "pattern": "^A[0-9]+:[0-9]{4}$",
          "description": "OWASP Top 10 reference (e.g., A3:2017)"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "ai-prone",
              "production-blocker",
              "compliance-required",
              "emerging-threat",
              "custom"
            ]
          },
          "description": "Categorization tags"
        }
      },
      "description": "Additional metadata (CWE, OWASP, tags)"
    },
    "author": {
      "type": "string",
      "description": "Rule author name (optional)"
    },
    "date": {
      "type": "string",
      "format": "date",
      "description": "Rule creation date (YYYY-MM-DD, optional)"
    }
  }
}
